version: "3.8"

services:
  # MongoDB — общая база для микросервисов
  mongo:
    image: mongo:6.0
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  # RabbitMQ — брокер сообщений
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672" # основной порт RabbitMQ
      - "15672:15672" # веб-интерфейс управления
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - JWT_SECRET=${JWT_SECRET}
      - COURSE_SERVICE_URL=http://courses-service:5001
      - USER_SERVICE_URL=http://users-service:5002
      - LESSON_SERVICE_URL=http://courses-service:5001
      - COMMENT_SERVICE_URL=http://courses-service:5001
      - ENROLLMENT_SERVICE_URL=http://courses-service:5001
      - TAG_SERVICE_URL=http://courses-service:5001
    depends_on:
      - courses-service
      - users-service

  # Courses Service (включает уроки, комментарии, теги, записи на курс)
  courses-service:
    build:
      context: ./courses-service
      dockerfile: Dockerfile
    container_name: courses-service
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
      - MONGODB_URI=mongodb://mongo:27017/coursesdb
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongo
      - rabbitmq

  # Users Service
  users-service:
    build:
      context: ./users-service
      dockerfile: Dockerfile
    container_name: users-service
    restart: unless-stopped
    ports:
      - "5002:5002"
    environment:
      - PORT=5002
      - MONGODB_URI=mongodb://mongo:27017/usersdb
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongo

  # (Опционально) Consumer для RabbitMQ сообщений (если есть отдельный сервис)
  consumer:
    build:
      context: ./courses-service
      dockerfile: Dockerfile
    container_name: consumer
    restart: unless-stopped
    environment:
      - MONGODB_URI=mongodb://mongo:27017/coursesdb
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongo
      - rabbitmq
      - courses-service

volumes:
  mongo-data:
